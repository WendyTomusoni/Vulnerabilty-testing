import socket
import subprocess
import requests

def scan_ports(host, ports):
    open_ports = []
    for port in ports:
        sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        socket.setdefaulttimeout(1)
        result = sock.connect_ex((host, port))
        if result == 0:
            open_ports.append(port)
        sock.close()
    return open_ports

def check_software_versions(software_list):
    outdated_software = []
    for software in software_list:
        try:
            result = subprocess.run([software, '--version'], stdout=subprocess.PIPE, stderr=subprocess.PIPE, text=True)
            version = result.stdout.strip()
            if "outdated version" in version.lower():  # Simplified check, adjust based on real output
                outdated_software.append((software, version))
        except FileNotFoundError:
            print(f"{software} is not installed.")
    return outdated_software

def check_misconfigurations(host):
    common_misconfigurations = []
    urls_to_check = [
        f"http://{host}/index.php",
        f"http://{host}/.git",
        f"http://{host}/.env",
    ]
    for url in urls_to_check:
        try:
            response = requests.get(url, timeout=3)
            if response.status_code == 200:
                common_misconfigurations.append(url)
        except requests.RequestException as e:
            print(f"Error checking {url}: {e}")
    return common_misconfigurations

def vulnerability_scan(host, ports, software_list):
    print("Scanning ports...")
    open_ports = scan_ports(host, ports)
    print(f"Open ports: {open_ports}")

    print("Checking software versions...")
    outdated_software = check_software_versions(software_list)
    print(f"Outdated software: {outdated_software}")

    print("Checking for common misconfigurations...")
    misconfigurations = check_misconfigurations(host)
    print(f"Common misconfigurations found: {misconfigurations}")

# Example usage
host = 'example.com'
ports = range(1, 1025)  # Scan first 1024 ports
software_list = ['python', 'node', 'nginx']

vulnerability_scan(host, ports, software_list)
